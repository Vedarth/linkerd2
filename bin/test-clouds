#!/bin/bash

#
# Run integration tests on 4 cloud providers:
# - Amazon (EKS)
# - DigitalOcean (DO)
# - Google (GKE)
# - Microsoft (AKS)
#
# This script assumes you have a working Kubernetes cluster set up on each Cloud
# provider, and that Kubernetes contexts are configured via environment
# variables.

set -eu

# TODO: share this with test-run
function check_linkerd_binary(){
    printf "Checking the linkerd binary..."
    if [[ "$linkerd_path" != /* ]]; then
        printf "\\n[%s] is not an absolute path\\n" "$linkerd_path"
        exit 1
    fi
    if [ ! -x "$linkerd_path" ]; then
        printf "\\n[%s] does not exist or is not executable\\n" "$linkerd_path"
        exit 1
    fi
    exit_code=0
    "$linkerd_path" version --client > /dev/null 2>&1 || exit_code=$?
    if [ $exit_code -ne 0 ]; then
        printf "\\nFailed to run linkerd version command\\n"
        exit $exit_code
    fi
    printf "[ok]\\n"
}

linkerd_path=$1
check_linkerd_binary

for CLUSTER in $AKS $DO $EKS $GKE
do
  printf "\n$CLUSTER\n"
  bin/test-run $linkerd_path l5d-integration-cloud $CLUSTER
done




for CLUSTER in AKS DO EKS GKE FOO
do
  printf "\n$CLUSTER\n"
  (eval ${CLUSTER}_OUTPUT=$(kubectl --context "${!CLUSTER}" --all-namespaces=true get all)) &
done

echo "waiting for all tests to complete..."

for job in `jobs -p`
do
    wait $job || echo $CLUSTER1
done

